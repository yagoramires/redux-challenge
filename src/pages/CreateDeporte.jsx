/* 6Ô∏è‚É£ *** COMPONENTE CreateDeporte *** 6Ô∏è‚É£

Implemente o componente CreateDeporte. Ele consistir√° em um formul√°rio controlado com estados do React.
üì¢ Siga as instru√ß√µes dos TESTES! üì¢

REQUISITOS
üü¢ Aqui voc√™ ter√° que renderizar uma s√©rie de elementos HTML com diferentes atributos e informa√ß√µes dentro.
üü¢ Deve gerenciar cada um dos campos de entrada do seu formul√°rio atrav√©s de um estado local chamado "input".
üü¢ As informa√ß√µes do formul√°rio devem ser enviadas ao estado global quando ocorrer um envio (submit).
üü¢ Deve-se lidar com os erros que os campos de entrada do formul√°rio podem ter.

IMPORTANTE
‚ùó Importe as actions como Object Modules, caso contr√°rio, os testes n√£o funcionar√£o!
‚ùó Este componente deve ser FUNCIONAL.
‚ùó Para fins pr√°ticos, o campo de entrada para "ligas destacadas" ser√° apenas uma string e ser√° chamado de "liga destacada".
‚ùó Voc√™ pode implementar o tratamento de erros da maneira que preferir! Apenas lembre-se de renderizar o erro apropriado em cada caso.
‚ùó N√ÉO fazer uma desestrutura√ß√£o dos hooks do React, voc√™ deve utiliz√°-los da seguinte forma:
- 'React.useState'
- 'React.useEffect'
*/

import { useState } from 'react';

export default function CreateDeporte() {
  const [input, setInput] = useState({
    nombre: '',
    deporte: '',
    ligaDestacada: '',
  });

  const handleChange = (e) => {
    setInput({
      ...input,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Despache a a√ß√£o createDeporte aqui
    // createDeporte(input);
  };

  return (
    <>
      <h1>Create Deporte</h1>
      <form onSubmit={handleSubmit}>
        {/* Renderize os inputs do formul√°rio aqui */}
        <button type='submit'>Submit</button>
      </form>
    </>
  );
}
